% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataStructure.R
\name{dataStructure}
\alias{dataStructure}
\title{Retrieve information about the structure of each classification tables from CELLAR and FAO repositories.}
\usage{
dataStructure(prefix, conceptScheme, endpoint, language = "en")
}
\arguments{
\item{prefix}{Prefixes are typically defined at the beginning of a SPARQL query 
and are used throughout the query to make it more concise and easier to read. 
Multiple prefixes can be defined in a single query to cover different namespaces used in the data set.
The function 'classificationEndpoint()' can be used to generate the prefixes for the selected classification table.}

\item{conceptScheme}{Refers to a unique identifier associated to specific classification table. 
The conceptScheme can be obtained by utilizing the "classificationEndpoint()" function.}

\item{endpoint}{SPARQL endpoints provide a standardized way to access data sets, 
making it easier to retrieve specific information or perform complex queries on linked data.
The valid values are \code{"CELLAR"} or \code{"FAO"}.}

\item{language}{Refers to the specific language used for providing label, include and exclude information in the selected classification table. 
By default is set to "en". This is an optional argument.}
}
\value{
\code{structureData()} returns the structure of a classification table from CELLAR and FAO in form a table with the following colums:        
 \itemize{
    \item Concept_Scheme: taxonomy of the SKOS object to be retrieved
    \item Level: the levels of the objects in the collection 
    \item Depth: identify the hierarchy of each level
    \item Count: the number of objects retrieved in each level
}
}
\description{
Retrieve information, for all the classification available in the repositories (CELLAR and FAO),
about the level names their hierarchy and the numbers of records the function "structureData()" can be used.
}
\examples{
{
   ## Obtain a list including the structure of each classification available 
   ## CELLAR
   #data_CELLAR = list()
   #endpoint = "CELLAR"
   #list_data = classificationEndpoint("ALL")
  # 
}
}
